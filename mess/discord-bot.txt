----------Actual things in test ----------------
from discord.ext import commands

#client=commands.Bot(command_prefix=".")

#THIS IS JUST A TEST
#@client.command()
#async def createRole(ctx):
#  await message.channel.send('role created')
#  author = ctx.message.author
#  await client.create_role(author.server, name="role name")

  
#FIND A WAY TO GET THE ROLE OF NFT OWNER (need the "member" in entry point)
  #role = discord.utils.get(member.server.roles, name='NFT member')
  #await client.add_roles(member, role)
  #await message.channel.send(f'{member.name} just got the NFT member role !') #TO DELETE LATER, it's just to test if it work





------------------------------------------------








ORIGINAL :
def update_address(enteredAddress):
  if "collectionAddress" in db.keys():
    collectionAddress = db ["collectionAddress"]
    collectionAddress.append(enteredAddress)
    db["collectionAddress"] = collectionAddress
  else:
    db["collectionAddress"] = [enteredAddress]








@client.event
async def on_member_join(member):
  await message.channel.send("someone joins!")
  role = discord.utils.get(member.server.roles, name='NFT member')
  await client.add_roles(member, role)
  








from discord.ext import commands
from discord.ext.commands import has_permissions
from discord.utils import get


@commands.command(pass_context = True)
@commands.has_permissions(manage_roles = True)
async def addRole(self, ctx, user : discord.Member, *, role: discord.Role):
  if role in user.roles:
    await ctx.send(f"{user.mention} already has the role {role}")
  else:
    await user.add_roles(role)
    await ctx.send(f"Added {role} to {user.mention}")
