import React, { useEffect, useState } from 'react';
import { useMoralis, useNewMoralisObject } from "react-moralis";
import { Button, makeStyles, Input } from "@material-ui/core"


//make this swag
const useStyles = makeStyles((theme) => ({
    container: {
        padding: theme.spacing(4),
        display: "flex",
        justifyContent: "flex-end",
        gap: theme.spacing(1)
    }
}))


export const Main = () => {
    //use the swag styles
    const classes = useStyles()


    //be able to login and logout
    const { authenticate, isAuthenticated, isAuthenticating, user, account, logout, setUserData } = useMoralis();


    const [username, setUsername] = useState(user?.attributes.username);

    const handleSave = () => {
        setUserData({
            username
        })
        console.log("Username changed!");
    }


    //login and assign the discord address to the user
    const login = async () => {
        //Login
        if (!isAuthenticated) {

            await authenticate({ signingMessage: "Login in" })
                .then(function (user) {
                    console.log("logged in user:", user);
                    console.log(user!.get("ethAddress"));
                    const wallet = user!.get("ethAddress")
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    }


    //logout
    const logOut = async () => {
        await logout();
        console.log("logged out");
    }



    const twoInOne = async () => {
        login();
        await timeout(60000);
        handleSave();
    }


    function timeout(delay: number) {
        return new Promise(res => setTimeout(res, delay));
    }

    //await timeout(60000); //for 1 sec delay


    return (
        <div className={classes.container}>
            <div>
                <Input value={username} onChange={(event) => setUsername(event.currentTarget.value)} />
                {isAuthenticated ? (
                    <Button color="default" variant="contained" onClick={logOut} disabled={isAuthenticating}>
                        Disconnect ðŸ¦Š
                    </Button>
                ) : (
                    <Button color="primary" variant="contained" onClick={twoInOne}>
                        Connect ðŸ¦Š
                    </Button>
                )
                }
            </div>
        </div>
    );
}
